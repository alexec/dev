// generated by deep-copy --type Task --type Probe --pointer-receiver -o pod_deepcopy.go .; DO NOT EDIT.

package types

import (
	"k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopy generates a deep copy of *Task
func (o *Task) DeepCopy() *Task {
	var cp Task = *o
	if o.LivenessProbe != nil {
		cp.LivenessProbe = o.LivenessProbe.DeepCopy()
	}
	if o.ReadinessProbe != nil {
		cp.ReadinessProbe = o.ReadinessProbe.DeepCopy()
	}
	if o.Command != nil {
		cp.Command = make([]string, len(o.Command))
		copy(cp.Command, o.Command)
	}
	if o.Args != nil {
		cp.Args = make([]string, len(o.Args))
		copy(cp.Args, o.Args)
	}
	if o.Env != nil {
		cp.Env = make([]EnvVar, len(o.Env))
		copy(cp.Env, o.Env)
	}
	if o.Ports != nil {
		cp.Ports = make([]Port, len(o.Ports))
		copy(cp.Ports, o.Ports)
	}
	if o.VolumeMounts != nil {
		cp.VolumeMounts = make([]VolumeMount, len(o.VolumeMounts))
		copy(cp.VolumeMounts, o.VolumeMounts)
	}
	if o.Watch != nil {
		cp.Watch = make([]string, len(o.Watch))
		copy(cp.Watch, o.Watch)
	}
	return &cp
}

// DeepCopy generates a deep copy of *Probe
func (o *Probe) DeepCopy() *Probe {
	var cp Probe = *o
	if o.TCPSocket != nil {
		cp.TCPSocket = new(TCPSocketAction)
		*cp.TCPSocket = *o.TCPSocket
	}
	if o.HTTPGet != nil {
		cp.HTTPGet = new(HTTPGetAction)
		*cp.HTTPGet = *o.HTTPGet
		if o.HTTPGet.Port != nil {
			cp.HTTPGet.Port = new(intstr.IntOrString)
			*cp.HTTPGet.Port = *o.HTTPGet.Port
		}
	}
	return &cp
}
