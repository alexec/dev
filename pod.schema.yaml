$defs:
  EnvVar:
    additionalProperties: false
    properties:
      name:
        type: string
      value:
        type: string
    required:
    - name
    - value
    type: object
  EnvVars:
    items:
      $ref: '#/$defs/EnvVar'
    type: array
  HTTPGetAction:
    additionalProperties: false
    properties:
      path:
        description: Path to access on the HTTP server.
        type: string
      port:
        description: Number of the port
        type: integer
      scheme:
        description: Scheme to use for connecting to the host. Defaults to HTTP.
        type: string
    type: object
  HostPath:
    additionalProperties: false
    properties:
      path:
        description: Path of the directory on the host.
        type: string
    required:
    - path
    type: object
  Metadata:
    additionalProperties: false
    properties:
      annotations:
        description: Annotations is an unstructured key value map stored with a resource
          that may be set by external tools to store and retrieve arbitrary metadata.
        patternProperties:
          .*:
            type: string
        type: object
      name:
        description: Name is the name of the resource.
        type: string
    required:
    - name
    type: object
  Pod:
    additionalProperties: false
    properties:
      apiVersion:
        description: APIVersion must be `kit/v1`.
        type: string
      kind:
        description: Kind must be `Tasks`.
        type: string
      metadata:
        $ref: '#/$defs/Metadata'
      spec:
        $ref: '#/$defs/PodSpec'
    required:
    - spec
    - metadata
    type: object
  PodSpec:
    additionalProperties: false
    properties:
      tasks:
        $ref: '#/$defs/Tasks'
        description: Tasks is a list of tasks that should be run.
      terminationGracePeriodSeconds:
        description: TerminationGracePeriodSeconds is the grace period for terminating
          the pod.
        type: integer
      volumes:
        description: Volumes is a list of volumes that can be mounted by containers
          belonging to the pod.
        items:
          $ref: '#/$defs/Volume'
        type: array
    type: object
  Port:
    additionalProperties: false
    properties:
      containerPort:
        description: The container port to expose
        type: integer
      hostPort:
        description: The host port to route to the container port
        type: integer
    type: object
  Ports:
    items:
      $ref: '#/$defs/Port'
    type: array
  Probe:
    additionalProperties: false
    description: A probe to check if the task is alive, it will be restarted if not.
    properties:
      failureThreshold:
        description: Minimum consecutive failures for the probe to be considered failed
          after having succeeded.
        type: integer
      httpGet:
        $ref: '#/$defs/HTTPGetAction'
      initialDelaySeconds:
        description: Number of seconds after the process has started before the probe
          is initiated.
        type: integer
      periodSeconds:
        description: How often (in seconds) to perform the probe.
        type: integer
      successThreshold:
        description: Minimum consecutive successes for the probe to be considered
          successful after having failed.
        type: integer
      tcpSocket:
        $ref: '#/$defs/TCPSocketAction'
    type: object
  Strings:
    items:
      type: string
    type: array
  TCPSocketAction:
    additionalProperties: false
    properties:
      port:
        description: Port number of the port to probe.
        type: integer
    required:
    - port
    type: object
  Task:
    additionalProperties: false
    properties:
      args:
        $ref: '#/$defs/Strings'
        description: The arguments to pass to the command
      command:
        $ref: '#/$defs/Strings'
        description: The command to run in the container or on the host
      dependencies:
        $ref: '#/$defs/Strings'
        description: A list of tasks to run before this task
      env:
        $ref: '#/$defs/EnvVars'
      image:
        description: Either the container image to run, or a directory containing
          a Dockerfile
        type: string
      imagePullPolicy:
        description: Pull policy, e.g. Always, Never, IfNotPresent
        type: string
      livenessProbe:
        $ref: '#/$defs/Probe'
        description: A probe to check if the task is alive, it will be restarted if
          not
      mutex:
        description: A mutex to prevent multiple tasks with the same mutex from running
          at the same time
        type: string
      name:
        description: The name of the task, must be unique
        type: string
      ports:
        $ref: '#/$defs/Ports'
      readinessProbe:
        $ref: '#/$defs/Probe'
        description: A probe to check if the task is ready to serve requests
      restartPolicy:
        description: The restart policy, e.g. Always, Never, OnFailure
        type: string
      tty:
        type: boolean
      volumeMounts:
        items:
          $ref: '#/$defs/VolumeMount'
        type: array
      watch:
        $ref: '#/$defs/Strings'
        description: A list of files to watch for changes, and restart the task if
          they change
      workingDir:
        description: The working directory in the container or on the host
        type: string
    required:
    - name
    type: object
  Tasks:
    items:
      $ref: '#/$defs/Task'
    type: array
  Volume:
    additionalProperties: false
    properties:
      hostPath:
        $ref: '#/$defs/HostPath'
        description: HostPath represents a pre-existing file or directory on the host
          machine that is directly exposed to the container.
      name:
        description: Volume's name.
        type: string
    required:
    - name
    - hostPath
    type: object
  VolumeMount:
    additionalProperties: false
    description: VolumeMount describes a mounting of a Volume within a container.
    properties:
      mountPath:
        description: Path within the container at which the volume should be mounted.
        type: string
      name:
        description: This must match the name of a volume.
        type: string
    required:
    - name
    - mountPath
    type: object
$id: https://github.com/alexec/kit/internal/types/pod
$ref: '#/$defs/Pod'
$schema: https://json-schema.org/draft/2020-12/schema
